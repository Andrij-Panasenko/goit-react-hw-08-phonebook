{"version":3,"file":"static/js/86.7448fcc6.chunk.js","mappings":"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","sources":["redux/seceltors.js","components/Wrapper.styled.js","components/ContactAddForm/ContactAddForm.styled.js","components/ContactAddForm/ContactAddForm.js","components/Title/Title.styled.js","components/Title/Title.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/GlobalStyle.js","pages/Phonebook.js"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilterValue = state => state.filter.value;\n\nexport const selectVisibleContacts = createSelector([\n  selectContacts,\n  selectFilterValue,\n], (contacts, filters) => contacts.filter(item=>item.name.toLowerCase().includes(filters.toLowerCase()))\n);","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  width: ${p => p.theme.spacing(125)};\n  padding: ${p => p.theme.spacing(10)};\n  margin: 0 auto;\n  background-color: ${p => p.theme.colors.background};\n  border-radius: 25px;\n`;\n","import styled from 'styled-components';\nimport {\n  Form as FormikForm,\n  Field as FormikField,\n  ErrorMessage as FormikError,\n} from 'formik';\n\nexport const Form = styled(FormikForm)`\n  margin-top: ${p => p.theme.spacing(5)};\n  margin-bottom: ${p => p.theme.spacing(5)};\n`;\n\nexport const Field = styled(FormikField)`\n  display: block;\n  width: 100%;\n  margin: 0 auto;\n  outline: none;\n  padding: ${p => p.theme.spacing(2)};\n  border: 1px solid ${p => p.theme.colors.lightGrey};\n  border-radius: ${p => p.theme.spacing(1)};\n`;\n\nexport const FormField = styled.label`\n  display: block;\n  margin-bottom: ${p => p.theme.spacing(5)};\n  font-size: ${p => p.theme.spacing(5)};\n  font-weight: 700;\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  font-size: ${p => p.theme.spacing(4)};\n  color: red;\n`;\n\nexport const Button = styled.button`\n  display: block;\n  text-transform: uppercase;\n  padding: ${p => p.theme.spacing(3)} ${p => p.theme.spacing(4)};\n  margin: 0 auto;\n  font-weight: 700;\n  border: none;\n  box-shadow: ${p => p.theme.colors.boxShadow};\n  background-color: ${p => p.theme.colors.orange};\n  transition: ${p => p.theme.tratsition};\n  border-radius: 25px;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n","import { Formik } from 'formik';\nimport {\n  Form,\n  Field,\n  FormField,\n  ErrorMessage,\n  Button,\n} from './ContactAddForm.styled';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/seceltors';\nimport { addContact } from 'redux/operations';\n\nconst contactSchema = Yup.object().shape({\n  name: Yup.string().min(2, 'Too short!').required('Name is required'),\n  number: Yup.number().required('Must be filled'),\n});\n\nexport const ContactAddForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const addNewContact = newContact => {\n    const hasContact = contacts.some(\n      contact => contact.name === newContact.name\n    );\n\n    if (hasContact) {\n      alert('A contact with that name already exists');\n      return;\n    }\n    dispatch(addContact(newContact));\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          name: '',\n          number: '',\n        }}\n        validationSchema={contactSchema}\n        onSubmit={(values, actions) => {\n          addNewContact(values);\n          actions.resetForm();\n        }}\n      >\n        <Form>\n          <FormField>\n            Name:\n            <Field name=\"name\" type=\"text\" />\n            <ErrorMessage name=\"name\" component=\"span\" />\n          </FormField>\n\n          <FormField>\n            Number:\n            <Field name=\"number\" type=\"tel\" />\n            <ErrorMessage name=\"number\" component=\"span\" />\n          </FormField>\n\n          <Button type=\"submit\">Add contact</Button>\n        </Form>\n      </Formik>\n    </>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const ContactsTitle = styled.h2`\n  margin-bottom: ${p => p.theme.spacing(5)};\n`;","import { ContactsTitle } from './Title.styled';\n\nexport const Title = ({ title }) => {\n   return <ContactsTitle>{title}</ContactsTitle>;\n};","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: ${p => p.theme.spacing(5)};\n  font-size: ${p => p.theme.spacing(5)};\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 100%;\n  margin: 0 auto;\n  outline: none;\n  padding: ${p => p.theme.spacing(2)};\n  margin-top: ${p => p.theme.spacing(2)};\n  border: 1px solid ${p => p.theme.colors.lightGrey};\n  border-radius: ${p => p.theme.spacing(1)};\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { Label, Input } from './Filter.styled';\nimport { setFilter } from 'redux/filterSlice';\nimport { selectFilterValue } from 'redux/seceltors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilterValue);\n\n  return (\n    <Label>\n      Find contact by name:\n      <Input\n        type=\"text\"\n        placeholder=\"Name\"\n        value={filter}\n        onChange={evt => dispatch(setFilter(evt.target.value))}\n      />\n    </Label>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Contact = styled.li`\n   display: flex;\n   align-items: center;\n   justify-content: space-between;\n\n   &:not(:last-child) {\n      margin-bottom: ${p => p.theme.spacing(5)};\n   };\n`;\n\nexport const NameWrapp = styled.div`\n  display: flex;\n  gap: ${p => p.theme.spacing(2)};\n\n  \n`;\n\nexport const Button = styled.button`\n  padding: ${p => p.theme.spacing(1)};\n  display: block;\n  width: 25px;\n  border-radius: 25px;\n  border: none;\n  background-color: ${p => p.theme.colors.red};\n  color: ${p => p.theme.colors.white};\n  transition: ${p => p.theme.tratsition};\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;","import { useDispatch } from 'react-redux';\nimport { Button, Contact, NameWrapp } from './ContactItem.styled';\nimport { deleteContact } from 'redux/operations';\n\nexport const ContactItem = ({ values: { id, name, number } }) => {\n  const dispatch = useDispatch(); //to delete contact by onClick\n\n  return (\n    <Contact>\n      <NameWrapp>\n        <p>{name}:</p>\n        <p>{number}</p>\n      </NameWrapp>\n      <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n        x\n      </Button>\n    </Contact>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Notify = styled.p`\n  text-align: center;\n`;\n","import { useSelector } from 'react-redux';\nimport { ContactItem } from '../ContactItem/ContactItem';\nimport { Notify } from './ContactList.styled';\nimport { selectVisibleContacts } from 'redux/seceltors';\n\nexport const ContactList = () => {\n  const filteredContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <div>\n      <ul>\n        {filteredContacts.length > 0 ? (\n          filteredContacts.map(item => (\n            <ContactItem key={item.id} values={item} />\n          ))\n        ) : (\n          <Notify>\n            Your contatcs is empty. Please add contact to your list\n          </Notify>\n        )}\n      </ul>\n    </div>\n  );\n};\n","import { createGlobalStyle } from 'styled-components';\nimport 'modern-normalize';\n\nexport const GlobalStyle = createGlobalStyle`\n   body {\n  font-family: Ubuntu, sans-serif;\n}\n\nbutton {\n  cursor: pointer;\n}\n\nimg {\n  display: block;\n  max-width: 100%;\n  height: auto;\n  object-fit: cover;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np {\n  margin: 0;\n}\n\n.link {\n  text-decoration: none;\n}\n\nul,\nol {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\n`;\n","// import { GlobalStyle } from './GlobalStyle';\n\n// import { Wrapper } from './Wrapper.styled';\n// import { ContactAddForm } from './ContactAddForm/ContactAddForm';\n// import { ContactList } from './ContactList/ContactList';\n// import { Title } from './Title/Title';\n// import { Filter } from './Filter/Filter';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { fetchContacts } from 'redux/operations';\n// import { selectIsLoading } from 'redux/seceltors';\nimport { Helmet } from 'react-helmet';\nimport Notiflix from 'notiflix';\nimport { useEffect } from 'react';\nimport { selectIsLoading } from 'redux/seceltors';\nimport { fetchContacts } from 'redux/operations';\nimport { Wrapper } from 'components/Wrapper.styled';\nimport { ContactAddForm } from 'components/ContactAddForm/ContactAddForm';\nimport { Title } from 'components/Title/Title';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { GlobalStyle } from 'components/GlobalStyle';\n\nexport default function Phonebook() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <>\n      {isLoading\n        ? Notiflix.Loading.dots('Please, wait...')\n        : Notiflix.Loading.remove()}\n      <Wrapper>\n        <Helmet>\n          <title>Phonebook</title>\n        </Helmet>\n\n        <ContactAddForm />\n        <Title title=\"Contacts\" />\n        <Filter />\n        <ContactList />\n      </Wrapper>\n      <GlobalStyle />\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectFilterValue","filter","value","selectVisibleContacts","createSelector","filters","item","name","toLowerCase","includes","Wrapper","styled","_templateObject","_taggedTemplateLiteral","p","theme","spacing","colors","background","Form","FormikForm","Field","FormikField","_templateObject2","lightGrey","FormField","_templateObject3","ErrorMessage","FormikError","_templateObject4","Button","_templateObject5","boxShadow","orange","tratsition","contactSchema","Yup","shape","min","required","number","ContactAddForm","dispatch","useDispatch","useSelector","_jsx","_Fragment","children","Formik","initialValues","validationSchema","onSubmit","values","actions","newContact","some","contact","alert","addContact","resetForm","_jsxs","type","component","ContactsTitle","Title","_ref","title","Label","Input","Filter","placeholder","onChange","evt","setFilter","target","Contact","NameWrapp","red","white","ContactItem","_ref$values","id","onClick","deleteContact","Notify","ContactList","filteredContacts","length","map","GlobalStyle","createGlobalStyle","Phonebook","useEffect","fetchContacts","Notiflix","Helmet"],"sourceRoot":""}