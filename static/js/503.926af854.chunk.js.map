{"version":3,"file":"static/js/503.926af854.chunk.js","mappings":"uQAIaA,EAAaC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+GACzB,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,IAAI,IACvB,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,GAAG,IAEf,SAAAF,GAAC,OAAIA,EAAEC,MAAME,OAAOC,UAAU,IAIvCC,GAAQR,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAmBU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,oJAK3B,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,EAAE,IACd,SAAAF,GAAC,OAAIA,EAAEC,MAAME,OAAOK,SAAS,IAChC,SAAAR,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,EAAE,IAG7BO,EAAQZ,EAAAA,GAAAA,MAAYa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,4FAEd,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,EAAE,IAC3B,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,EAAE,IAIzBS,GAAed,EAAAA,EAAAA,IAAOe,EAAAA,GAAPf,CAAmBgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,4CAChC,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,EAAE,IAIzBY,EAASjB,EAAAA,GAAAA,OAAakB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,4TAGtB,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,EAAE,IAAI,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,EAAE,IAI/C,SAAAF,GAAC,OAAIA,EAAEC,MAAME,OAAOa,SAAS,IACvB,SAAAhB,GAAC,OAAIA,EAAEC,MAAME,OAAOc,MAAM,IAChC,SAAAjB,GAAC,OAAIA,EAAEC,MAAMiB,UAAU,I,SC9BjCC,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,MAAOF,EAAAA,KAAaG,SAAS,kBAC7BC,SAAUJ,EAAAA,KACPK,IAAI,EAAG,sBACPF,SAAS,0BAGDG,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAIjB,OACEC,EAAAA,EAAAA,KAACjC,EAAU,CAAAkC,UACTD,EAAAA,EAAAA,KAACE,EAAAA,GAAM,CACLC,cAAe,CAAEV,MAAO,GAAIE,SAAU,IACtCL,iBAAkBA,EAClBc,SAAU,SAACC,EAAQC,GACjBR,GAASS,EAAAA,EAAAA,IAAMF,IACfC,EAAQE,WACV,EAAEP,UAEFQ,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAAAT,SAAA,EACHQ,EAAAA,EAAAA,MAAC7B,EAAK,CAAAqB,SAAA,CAAC,UAELD,EAAAA,EAAAA,KAACxB,EAAK,CAACmC,KAAK,QAAQC,KAAK,WACzBZ,EAAAA,EAAAA,KAAClB,EAAY,CAAC6B,KAAK,QAAQE,UAAU,aAGvCJ,EAAAA,EAAAA,MAAC7B,EAAK,CAAAqB,SAAA,CAAC,aAELD,EAAAA,EAAAA,KAACxB,EAAK,CAACmC,KAAK,WAAWC,KAAK,cAC5BZ,EAAAA,EAAAA,KAAClB,EAAY,CAAC6B,KAAK,WAAWE,UAAU,aAE1Cb,EAAAA,EAAAA,KAACf,EAAM,CAAC2B,KAAK,SAAQX,SAAC,iBAKhC,ECjDe,SAASM,IACtB,OACEE,EAAAA,EAAAA,MAAAK,EAAAA,SAAA,CAAAb,SAAA,EACED,EAAAA,EAAAA,KAACe,EAAAA,EAAM,CAAAd,UACLD,EAAAA,EAAAA,KAAA,SAAAC,SAAO,kBAETD,EAAAA,EAAAA,KAACH,EAAS,MAGhB,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.js","pages/Login.js"],"sourcesContent":["import styled from 'styled-components';\n\nimport { Field as FormikField, ErrorMessage as FormikError } from 'formik';\n\nexport const LoginWrapp = styled.div`\n  width: ${p => p.theme.spacing(125)};\n  padding: ${p => p.theme.spacing(10)};\n  margin: 0 auto;\n  background-color: ${p => p.theme.colors.background};\n  border-radius: 25px;\n`;\n\nexport const Field = styled(FormikField)`\n  display: block;\n  width: 100%;\n  margin: 0 auto;\n  outline: none;\n  padding: ${p => p.theme.spacing(2)};\n  border: 1px solid ${p => p.theme.colors.lightGrey};\n  border-radius: ${p => p.theme.spacing(1)};\n`;\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: ${p => p.theme.spacing(5)};\n  font-size: ${p => p.theme.spacing(5)};\n  font-weight: 700;\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  font-size: ${p => p.theme.spacing(4)};\n  color: red;\n`;\n\nexport const Button = styled.button`\n  display: block;\n  text-transform: uppercase;\n  padding: ${p => p.theme.spacing(3)} ${p => p.theme.spacing(4)};\n  margin: 0 auto;\n  font-weight: 700;\n  border: none;\n  box-shadow: ${p => p.theme.colors.boxShadow};\n  background-color: ${p => p.theme.colors.orange};\n  transition: ${p => p.theme.tratsition};\n  border-radius: 25px;\n  font-size: 20px;\n  cursor: pointer;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;","import { Formik, Form, } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\n\nimport {\n  Button,\n  LoginWrapp,\n  Field,\n  Label,\n  ErrorMessage,\n} from './LoginForm.styled';\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().required('Must be filled'),\n  password: Yup.string()\n    .min(6, 'Uncorrect password')\n    .required('Password is required'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  // кдери для логіну {email: \"qwewq@mail.com\", name: \"qwewq\", password: \"qwewq12321\"}\n\n  return (\n    <LoginWrapp>\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        validationSchema={validationSchema}\n        onSubmit={(values, actions) => {\n          dispatch(logIn(values));\n          actions.resetForm();\n        }}\n      >\n        <Form>\n          <Label>\n            Email:\n            <Field name=\"email\" type=\"email\" />\n            <ErrorMessage name=\"email\" component=\"span\"/>\n          </Label>\n\n          <Label>\n            Password:\n            <Field name=\"password\" type=\"password\" />\n            <ErrorMessage name=\"password\" component=\"span\"/>\n          </Label>\n          <Button type=\"submit\">Log In</Button>\n        </Form>\n      </Formik>\n    </LoginWrapp>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function logIn() {\n  return (\n    <>\n      <Helmet>\n        <title>login page</title>\n      </Helmet>\n      <LoginForm />\n    </>\n  );\n}\n"],"names":["LoginWrapp","styled","_templateObject","_taggedTemplateLiteral","p","theme","spacing","colors","background","Field","FormikField","_templateObject2","lightGrey","Label","_templateObject3","ErrorMessage","FormikError","_templateObject4","Button","_templateObject5","boxShadow","orange","tratsition","validationSchema","Yup","shape","email","required","password","min","LoginForm","dispatch","useDispatch","_jsx","children","Formik","initialValues","onSubmit","values","actions","logIn","resetForm","_jsxs","Form","name","type","component","_Fragment","Helmet"],"sourceRoot":""}