{"version":3,"file":"static/js/854.3f7e11b2.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.js","pages/Register.js"],"sourcesContent":["import styled from 'styled-components';\n\nimport {\n  Field as FormikField,\n  ErrorMessage as FormikError,\n} from 'formik';\n\nexport const RegisterWrapp = styled.div`\n  width: ${p => p.theme.spacing(125)};\n  padding: ${p => p.theme.spacing(10)};\n  margin: 0 auto;\n  background-color: ${p => p.theme.colors.background};\n  border-radius: 25px;\n`;\n\nexport const Field = styled(FormikField)`\n  display: block;\n  width: 100%;\n  margin: 0 auto;\n  outline: none;\n  padding: ${p => p.theme.spacing(2)};\n  border: 1px solid ${p => p.theme.colors.lightGrey};\n  border-radius: ${p => p.theme.spacing(1)};\n`;\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: ${p => p.theme.spacing(5)};\n  font-size: ${p => p.theme.spacing(5)};\n  font-weight: 700;\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  font-size: ${p => p.theme.spacing(4)};\n  color: red;\n`;\n\nexport const Button = styled.button`display: block;\n  text-transform: uppercase;\n  padding: ${p => p.theme.spacing(3)} ${p => p.theme.spacing(4)};\n  margin: 0 auto;\n  font-weight: 700;\n  border: none;\n  box-shadow: ${p => p.theme.colors.boxShadow};\n  background-color: ${p => p.theme.colors.orange};\n  transition: ${p => p.theme.tratsition};\n  border-radius: 25px;\n  font-size: 20px;\n  cursor: pointer;\n\n  &:hover {\n    transform: scale(1.05);\n  }`;","import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\n// import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { Formik, Form } from 'formik';\n\nimport * as Yup from 'yup';\nimport {\n  RegisterWrapp,\n  \n  Field,\n  ErrorMessage,\n  Button,\n  Label,\n} from './RegisterForm.styled';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string().min(2, 'Too short!').required('Name is required'),\n  email: Yup.string().required('Must be filled'),\n  password: Yup.string()\n    .min(6, 'Password is too short, minimum length is 6 characters')\n    .matches(\n      /^(?=.*[a-z])(?=.*[0-9])/,\n      'Password must contain at least one lowercase letter and one number'\n    )\n    .required('Password is required'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <RegisterWrapp>\n      {/* // кдери для логіну {\n        email: \"qwewq@mail.com\", \n      name: \"qwewq\", \n      password: \"qwewq12321\"} */}\n      <Formik\n        initialValues={{ email: '', name: '', password: '' }}\n        validationSchema={validationSchema}\n        onSubmit={(values, actions) => {\n          console.log('values', values);\n          dispatch(register(values));\n          actions.resetForm();\n        }}\n      >\n        <Form>\n          <Label>\n            Name:\n            <Field name=\"name\" type=\"text\" />\n            <ErrorMessage name=\"name\" component=\"span\" />\n          </Label>\n          <Label>\n            Email:\n            <Field name=\"email\" type=\"email\" />\n            <ErrorMessage name=\"email\" component=\"span\" />\n          </Label>\n\n          <Label>\n            Password:\n            <Field name=\"password\" type=\"password\" />\n            <ErrorMessage name=\"password\" component=\"span\" />\n          </Label>\n          <Button type=\"submit\">Register</Button>\n        </Form>\n      </Formik>\n    </RegisterWrapp>\n  );\n};\n","import { Helmet } from 'react-helmet';\n\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </>\n  );\n}\n"],"names":["RegisterWrapp","styled","_templateObject","_taggedTemplateLiteral","p","theme","spacing","colors","background","Field","FormikField","_templateObject2","lightGrey","Label","_templateObject3","ErrorMessage","FormikError","_templateObject4","Button","_templateObject5","boxShadow","orange","tratsition","validationSchema","Yup","shape","name","min","required","email","password","matches","RegisterForm","dispatch","useDispatch","_jsx","children","Formik","initialValues","onSubmit","values","actions","console","log","register","resetForm","_jsxs","Form","type","component","Register","_Fragment","Helmet"],"sourceRoot":""}